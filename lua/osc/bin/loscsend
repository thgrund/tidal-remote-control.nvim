#!/usr/bin/env lua

local losc = require'losc'
local Types = require'losc.types'
local ok, plugin = pcall(require, 'losc.plugins.udp-socket')
if not ok then
  local msg = 'loscsend requires `luasocket`\nTry: `luarocks install luasocket`'
  io.stderr:write(msg)
  return
end

local unpack = unpack or table.unpack
local osc = losc.new {plugin = plugin.new()}

local function usage()
  local str = ''
  str = str .. 'loscsend - Send an OSC message via UDP.\n'
  str = str .. '\nusage: loscsend ip port address [types [args]]'
  str = str .. '\nsupported types: '
  local types = Types.get(Types.pack)
  table.sort(types)
  str = str .. table.concat(types, ', ')
  str = str .. '\n\nexample: loscsend localhost 57120 /test ifs 1 2.3 "hi"\n'
  io.write(str)
end

local function opt_parse(options)
  local ip, port, address, types = unpack(options)
  if ip == '-h' or ip == '--help' then
    usage()
    os.exit(0)
  end
  return ip, tonumber(port), address, types
end

-- Main

if not arg[1] then
  usage()
  os.exit(0)
end

local ip, port, address, types = opt_parse(arg)
local ok, message = pcall(losc.new_message, address)
if not ok then
  print(message)
  os.exit(1)
end

if types then
  local index = 5
  for type in types:gmatch('.') do
    local item = arg[index]
    if string.match(type, '[ifdht]') then
      item = tonumber(item)
    end
    message:add(type, item)
    index = index + 1
  end
end

if ip and port then
  osc:send(message, ip, port)
else
  print('Must specify ip and port. See loscsend -h for usage.')
  os.exit(1)
end

osc:close()
